!function(){const e=document.currentScript,t=e.getAttribute("src").split("/script.js")[0];new Promise(((e,t)=>{const o=document.createElement("script");o.src="https://unpkg.com/web-vitals@3/dist/web-vitals.iife.js",o.onload=()=>e(),o.onerror=()=>t(new Error("Failed to load web-vitals library")),document.head.appendChild(o)})).then((()=>{_()})).catch((e=>{console.warn("Failed to load web vitals library:",e)}));const o="true"===e.getAttribute("data-enable-replay");if(console.log(`[REPLAY] Session replay enabled: ${o}`),o&&(console.log("[REPLAY] Loading rrweb library..."),new Promise(((e,t)=>{const o=document.createElement("script");o.src="https://cdn.jsdelivr.net/npm/rrweb@2.0.0-alpha.4/dist/rrweb-all.js",o.onload=()=>e(),o.onerror=()=>t(new Error("Failed to load rrweb library")),document.head.appendChild(o)})).then((()=>{console.log("[REPLAY] rrweb library loaded successfully"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",O):setTimeout(O,100)})).catch((e=>{console.error("[REPLAY ERROR] Failed to load rrweb library:",e)}))),null!==localStorage.getItem("disable-rybbit"))return void(window.rybbit={pageview:()=>{},event:()=>{},trackOutbound:()=>{},identify:()=>{},clearUserId:()=>{},getUserId:()=>null});if(!t)return void console.error("Please provide a valid analytics host");const n=e.getAttribute("data-site-id")||e.getAttribute("site-id");if(!n||isNaN(Number(n)))return void console.error("Please provide a valid site ID using the data-site-id attribute");const r=Number(n);console.log(`[REPLAY] Site ID converted from string "${n}" to number ${r}`);const a=e.getAttribute("data-debounce")?Math.max(0,parseInt(e.getAttribute("data-debounce"))):500,l="false"!==e.getAttribute("data-auto-track-pageview"),s="false"!==e.getAttribute("data-track-spa"),i="false"!==e.getAttribute("data-track-query"),c="false"!==e.getAttribute("data-track-outbound"),d=parseFloat(e.getAttribute("data-replay-sample-rate")||"1.0"),u=parseInt(e.getAttribute("data-replay-max-duration")||"300000"),p="false"!==e.getAttribute("data-replay-mask-inputs"),g=e.getAttribute("data-replay-mask-selectors")||"input[type='password'], input[type='email'], .sensitive, [data-sensitive]";console.log("[REPLAY] Configuration:",{sampleRate:d,maxDuration:u,maskInputs:p,maskSelectors:g});let b=[];try{const t=e.getAttribute("data-skip-patterns");t&&(b=JSON.parse(t),Array.isArray(b)||(b=[]))}catch(e){console.error("Error parsing data-skip-patterns:",e)}let m=[];try{const t=e.getAttribute("data-mask-patterns");t&&(m=JSON.parse(t),Array.isArray(m)||(m=[]))}catch(e){console.error("Error parsing data-mask-patterns:",e)}let y=null;try{const e=localStorage.getItem("rybbit-user-id");e&&(y=e)}catch(e){}let h=null,f=[],w=null,R=null,E=null;function v(e){const t="__DOUBLE_ASTERISK_TOKEN__",o="__SINGLE_ASTERISK_TOKEN__";let n=e.replace(/\*\*/g,t).replace(/\*/g,o).replace(/[.+?^${}()|[\]\\]/g,"\\$&");n=n.replace(/\//g,"\\/");let r=n.replace(new RegExp(t,"g"),".*").replace(new RegExp(o,"g"),"[^/]+");return new RegExp("^"+r+"$")}function A(e,t){for(const o of t)try{if(v(o).test(e))return o}catch(e){console.error(`Invalid pattern: ${o}`,e)}return null}const P=()=>{const e=new URL(window.location.href);let t=e.pathname;if(e.hash&&e.hash.startsWith("#/")&&(t=e.hash.substring(1)),A(t,b))return null;const o=A(t,m);o&&(t=o);const n={site_id:r,hostname:e.hostname,pathname:t,querystring:i?e.search:"",screenWidth:window.innerWidth,screenHeight:window.innerHeight,language:navigator.language,page_title:document.title,referrer:document.referrer};return y&&(n.user_id=y),n},L=e=>{fetch(`${t}/track`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e),mode:"cors",keepalive:!0}).catch(console.error)},S=(e="pageview",t="",o={})=>{if("custom_event"===e&&(!t||"string"!=typeof t))return void console.error("Event name is required and must be a string for custom events");const n=P();if(!n)return;const r={...n,type:e,event_name:t,properties:"custom_event"===e||"outbound"===e?JSON.stringify(o):void 0};L(r)};let Y={lcp:null,cls:null,inp:null,fcp:null,ttfb:null},I=!1,k=null;const $=()=>{if(I)return;I=!0,k&&(clearTimeout(k),k=null);const e=P();if(!e)return;const t={...e,type:"performance",event_name:"web-vitals",lcp:Y.lcp,cls:Y.cls,inp:Y.inp,fcp:Y.fcp,ttfb:Y.ttfb};L(t)},x=e=>{I||(Y[e.name.toLowerCase()]=e.value,(()=>{if(I)return;Object.values(Y).every((e=>null!==e))&&$()})())},_=()=>{if("undefined"!=typeof webVitals)try{webVitals.getLCP(x),webVitals.getCLS(x),webVitals.getINP(x),webVitals.getFCP(x),webVitals.getTTFB(x),k=setTimeout((()=>{I||$()}),2e4),window.addEventListener("beforeunload",(()=>{I||$()}))}catch(e){console.warn("Error initializing web vitals tracking:",e)}},T=(e,o=!1)=>{if(!e.length)return void console.log("[REPLAY] sendReplayEvents called with empty events array");const n={site_id:r,session_id:w,events:e,is_complete:o,timestamp:(new Date).toISOString()};y&&(n.user_id=y);const a=JSON.stringify(n).length;console.log(`[REPLAY] Sending ${e.length} events (${a} bytes) to ${t}/replay/ingest, isComplete: ${o}`),fetch(`${t}/replay/ingest`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n),mode:"cors",keepalive:!0}).then((t=>{t.ok?console.log(`[REPLAY] Successfully sent ${e.length} events`):console.error(`[REPLAY ERROR] Failed to send events - Status: ${t.status} ${t.statusText}`)})).catch((e=>{console.error("[REPLAY ERROR] Network error sending events:",e)}))},N=()=>{console.log("[REPLAY] Stopping replay recording"),h&&(console.log("[REPLAY] Calling rrweb recorder stop function"),h(),h=null),f.length>0&&(console.log(`[REPLAY] Sending final ${f.length} events before stopping`),T(f,!0),f=[]),E&&(clearTimeout(E),E=null,console.log("[REPLAY] Cleared batch timeout")),console.log("[REPLAY] Replay recording stopped")},O=()=>{if(console.log("[REPLAY] initSessionReplay() called"),"undefined"!=typeof rrweb)if((()=>{const e=Math.random(),t=e<d;return console.log(`[REPLAY] shouldStartReplay() called - random: ${e.toFixed(4)}, sampleRate: ${d}, result: ${t}`),t})())try{w=crypto.randomUUID?crypto.randomUUID():"xxxx-xxxx-4xxx-yxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})),R=Date.now(),console.log(`[REPLAY] Generated session ID: ${w}, start time: ${new Date(R).toISOString()}`);const e=g.split(",").map((e=>e.trim())).filter(Boolean);console.log("[REPLAY] Parsed mask selectors:",e);const t={emit(e){console.log(`[REPLAY] Event emitted - type: ${e.type}, timestamp: ${e.timestamp}`),f.push(e),(()=>{if(f.length>=50){const e=f.splice(0,50);console.log(`[REPLAY] Batching ${e.length} events (batch size reached)`),T(e)}E&&clearTimeout(E),E=setTimeout((()=>{if(f.length>0){const e=f.splice(0);console.log(`[REPLAY] Batching ${e.length} events (timeout reached)`),T(e)}}),5e3)})()},maskAllInputs:p,maskTextSelector:e.join(","),maskInputSelector:p?"input":"",blockSelector:".rybbit-no-record, [data-rybbit-no-record]",checkoutEveryNms:1e4,sampling:{mousemove:!0,mouseInteraction:!0,scroll:150,input:"last"},recordCanvas:!1,collectFonts:!1};console.log("[REPLAY] Starting rrweb.record() with options:",t),h=rrweb.record(t),console.log("[REPLAY] rrweb recording started successfully"),h&&"function"==typeof h.takeFullSnapshot?(console.log("[REPLAY] Taking initial full snapshot"),h.takeFullSnapshot()):rrweb.takeFullSnapshot?(console.log("[REPLAY] Taking initial full snapshot via rrweb"),rrweb.takeFullSnapshot()):console.log("[REPLAY] No takeFullSnapshot method available, relying on automatic snapshot"),setTimeout((()=>{console.log(`[REPLAY] Max duration (${u}ms) reached, stopping replay`),N()}),u),window.addEventListener("beforeunload",(()=>{console.log("[REPLAY] Page unloading, stopping replay"),N()})),window.addEventListener("pagehide",(()=>{console.log("[REPLAY] Page hiding, stopping replay"),N()}))}catch(e){console.error("[REPLAY ERROR] Error initializing session replay:",e)}else console.log("[REPLAY] Replay not started due to sample rate");else console.warn("[REPLAY WARNING] rrweb library not available")},C=()=>S("pageview"),F=a>0?function(e,t){let o;return(...n)=>{clearTimeout(o),o=setTimeout((()=>e.apply(this,n)),t)}}(C,a):C;if(c&&document.addEventListener("click",(function(e){const t=e.target.closest("a");t&&t.href&&function(e){try{const t=window.location.hostname,o=new URL(e).hostname;return o!==t&&""!==o}catch(e){return!1}}(t.href)&&S("outbound","",{url:t.href,text:t.innerText||t.textContent||"",target:t.target||"_self"})})),s){const e=history.pushState,t=history.replaceState;history.pushState=function(...t){e.apply(this,t),F()},history.replaceState=function(...e){t.apply(this,e),F()},window.addEventListener("popstate",F),window.addEventListener("hashchange",F)}window.rybbit={pageview:C,event:(e,t={})=>S("custom_event",e,t),trackOutbound:(e,t="",o="_self")=>S("outbound","",{url:e,text:t,target:o}),identify:e=>{if("string"==typeof e&&""!==e.trim()){y=e.trim();try{localStorage.setItem("rybbit-user-id",y)}catch(e){console.warn("Could not persist user ID to localStorage")}}else console.error("User ID must be a non-empty string")},clearUserId:()=>{y=null;try{localStorage.removeItem("rybbit-user-id")}catch(e){}},getUserId:()=>y,startReplay:()=>{console.log(`[REPLAY] Public API startReplay() called - enableSessionReplay: ${o}, rrweb available: ${"undefined"!=typeof rrweb}, recorder active: ${null!==h}`),o&&"undefined"!=typeof rrweb&&!h?O():console.warn("[REPLAY WARNING] Cannot start replay - conditions not met")},stopReplay:()=>{console.log("[REPLAY] Public API stopReplay() called"),N()},isReplayActive:()=>{const e=null!==h;return console.log(`[REPLAY] Public API isReplayActive() called - result: ${e}`),e},getReplaySessionId:()=>(console.log(`[REPLAY] Public API getReplaySessionId() called - result: ${w}`),w)},l&&C()}();