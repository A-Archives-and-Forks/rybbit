version: '3.8'

# Production deployment with multiple regions
# Usage: REGION=us-east docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  monitor-agent:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_IMAGE:-frogstats/monitor-agent}:${REGION:-latest}
    restart: always
    
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
        labels: "region,service"
    
    # Health monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=3000"
      - "prometheus.io/path=/metrics"
      - "region=${REGION}"
      - "service=monitor-agent"
    
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      
      # Restart policy
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  # Nginx with auto-renewed SSL via Let's Encrypt
  nginx:
    image: nginx:alpine
    container_name: frogstats-monitor-nginx-${REGION}
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-certs:/etc/nginx/certs:ro
      - certbot-webroot:/var/www/certbot:ro
    depends_on:
      - monitor-agent
    restart: always
    networks:
      - monitor-network

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot
    container_name: frogstats-monitor-certbot-${REGION}
    volumes:
      - certbot-certs:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always

volumes:
  certbot-certs:
  certbot-webroot: