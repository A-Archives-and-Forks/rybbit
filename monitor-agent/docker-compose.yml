version: "3.8"

services:
  monitor-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rybbit-monitor-agent
    ports:
      - "${PORT:-3003}:3003"
    environment:
      # Server Configuration
      - PORT=${PORT:-3003}
      - HOST=${HOST:-0.0.0.0}

      # Region Configuration
      - REGION=${REGION:-us-east}
      - REGION_NAME=${REGION_NAME:-US East (Virginia)}

      # Authentication
      - API_KEY=${API_KEY}

      # Main Server URL
      - MAIN_SERVER_URL=${MAIN_SERVER_URL:-https://your-rybbit-server.com}

      # Security
      - ALLOWED_IPS=${ALLOWED_IPS:-}

      # Rate Limiting
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60000}

      # Monitoring Defaults
      - DEFAULT_TIMEOUT_MS=${DEFAULT_TIMEOUT_MS:-30000}
      - MAX_TIMEOUT_MS=${MAX_TIMEOUT_MS:-60000}

      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}

      # Health Check
      - HEALTH_CHECK_INTERVAL_MS=${HEALTH_CHECK_INTERVAL_MS:-30000}

    # Use .env file if it exists
    env_file:
      - .env

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Network configuration
    networks:
      - monitor-network

  # Optional: Nginx reverse proxy for HTTPS
  nginx:
    image: nginx:alpine
    container_name: rybbit-monitor-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - monitor-agent
    restart: unless-stopped
    networks:
      - monitor-network
    profiles:
      - with-ssl

networks:
  monitor-network:
    driver: bridge

# Volumes for persistent data (if needed in future)
volumes:
  monitor-data:
